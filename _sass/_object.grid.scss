/*
 * Object: Grid
 */

// Container & Rows
.container {
    width: 100%;
    max-width: $container-width;
    margin: 0 auto;
    padding: 0 5px;
    box-sizing: border-box;
    position: relative;
}

.row {
    zoom: 1;
    // There is room to add padding here if its required, otherwise set at a class
    // level, which gives EVEN MORE control!
}

.col {
  width: 100%;
  float: left;
  box-sizing: border-box;
}

////
// To set the width of a column on desktops do this: @extend %col-*a number*;
////
@media (min-width: $bp-larger-tablet) {
  .container {
    width: $container-larger-phablet;
    padding: 0;
  }

  .col {
    margin-left: $grid-gutter;

    &.flow { float: right; }
  }

  @for $n from 1 through $grid-columns {
    %col-#{$n} {
      width: grid-column-width($n);
    }
  }

  @for $n from 1 through $grid-columns {
    %offset-by-#{$n} {
      margin-left: grid-offset-length($n);
    }
  }

  // Hide from desktop
  %hide-desktop {
    display: none;
  }
}
