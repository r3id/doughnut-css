/*
 * Settings: Minxins
 */

// Transitions
// http://www.w3schools.com/css/css3_transitions.asp
// Usage:
// .css-class {
//  @include transition(color .3s ease);
// }
@mixin transition($transition) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
      -ms-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}

// Border radius
// http://www.w3schools.com/cssref/css3_pr_border-radius.asp
// Usage:
// .css-class {
//  @include border-radius(4px);
// }

@mixin border-radius($radius) {
  background-clip: padding-box;  // prevents bg color from leaking outside the border
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
       -o-border-radius: $radius;
          border-radius: $radius;
}

// Opacity
// http://www.w3schools.com/cssref/css3_pr_opacity.asp
// Usage:
// .css-class {
//   @include opacity(0.8);
// }
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); // Support for IE8
}

// Background size
// http://www.w3schools.com/cssref/css3_pr_background-size.asp
// Usage:
// .css-class {
//   @include background-size(cover);
// }
// .css-class-more {
//   @include background-size(50% 50%);
// }

@mixin background-size ($background-size) {
  -webkit-background-size: $background-size;
     -moz-background-size: $background-size;
       -o-background-size: $background-size;
          background-size: $background-size;
}

// Background position
// http://www.w3schools.com/cssref/pr_background-position.asp
// Usage:
// .css-class {
//   @include background-position(50% 50%);
// }
// .css-class-2 {
//   @include background-position(center center);
// }

@mixin background-position ($background-position) {
  -webkit-background-position: $background-position;
     -moz-background-position: $background-position;
       -o-background-position: $background-position;
          background-position: $background-position;
}

// Button
// The button mixin will auto generate the background and font colors for buttons, including the hover effect.
// Usage:
// .css-class {
//   @include button-dark($brand-main);
// }
// .css-class {
//   @include button-light($brand-main);
// }
@mixin button-darken($color) {
	background-color: $color;
  color: set-button-text-color($color);

	&:hover {
		background-color: darken($color, 10%);
    color: set-button-text-color($color);
	}
}
@mixin button-lighten($color) {
	background-color: $color;
  color: set-button-text-color($color);

	&:hover {
		background-color: lighten($color, 10%);
    color: set-button-text-color($color);
	}
}

// Media queries
// Media queries are pretty important for any mobile friendly site. This mixing
// will generate the media queries below the parent class, and populate the contents.
// Usage:
// .css-class {
//   color: %black;
//
//   @include tablet {
//    color: $brand-main;
//   }
//
//   @include desktop {
//    color: $brand-main;
//   }
// }
@mixin tablet {
  @media (min-width: #{$bp-larger-phablet}) and (max-width: #{$bp-larger-tablet- 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$bp-larger-tablet}) {
    @content;
  }
}
